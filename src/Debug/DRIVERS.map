Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./TIMER/TIMER.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./TEST/TEST.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./UART/UART.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./UART/UART.o
LOAD ./TIMER/TIMER.o
LOAD ./TEST/TEST.o
LOAD ./SWITCH/SWITCH.o
LOAD ./LCD/LCD.o
LOAD ./DIO/DIO.o
LOAD ./ADC/ADC.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x17ec
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./UART/UART.o
 .text          0x00000092        0x0 ./TIMER/TIMER.o
 .text          0x00000092        0x0 ./TEST/TEST.o
 .text          0x00000092        0x0 ./SWITCH/SWITCH.o
 .text          0x00000092        0x0 ./LCD/LCD.o
 .text          0x00000092        0x0 ./DIO/DIO.o
 .text          0x00000092        0x0 ./ADC/ADC.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.UART_vidInit
                0x00000092       0x58 ./UART/UART.o
                0x00000092                UART_vidInit
 .text.UART_vidSendChar
                0x000000ea       0x2e ./UART/UART.o
                0x000000ea                UART_vidSendChar
 .text.UART_u8RecieveChar
                0x00000118       0x1e ./UART/UART.o
                0x00000118                UART_u8RecieveChar
 .text.UART_u8DataReady
                0x00000136       0x16 ./UART/UART.o
                0x00000136                UART_u8DataReady
 .text.UART_u8GetUdr
                0x0000014c       0x14 ./UART/UART.o
                0x0000014c                UART_u8GetUdr
 .text.UART_vidSendString
                0x00000160       0x48 ./UART/UART.o
                0x00000160                UART_vidSendString
 .text._Debug   0x000001a8       0x62 ./UART/UART.o
                0x000001a8                _Debug
 .text.UART_vidRecieveString
                0x0000020a       0x7a ./UART/UART.o
                0x0000020a                UART_vidRecieveString
 .text.updatetime
                0x00000284       0x34 ./TIMER/TIMER.o
                0x00000284                updatetime
 .text.millis   0x000002b8       0x36 ./TIMER/TIMER.o
                0x000002b8                millis
 .text.TIMER_vidInit
                0x000002ee       0x26 ./TIMER/TIMER.o
                0x000002ee                TIMER_vidInit
 .text._delay_ms
                0x00000314       0xc8 ./TIMER/TIMER.o
                0x00000314                _delay_ms
 .text.TEST_DIO
                0x000003dc       0x3c ./TEST/TEST.o
                0x000003dc                TEST_DIO
 .text.__vector_10
                0x00000418       0x58 ./TEST/TEST.o
                0x00000418                __vector_10
 .text.SW_vidInit
                0x00000470        0xe ./SWITCH/SWITCH.o
                0x00000470                SW_vidInit
 .text.SW_u8AddPBN
                0x0000047e       0x92 ./SWITCH/SWITCH.o
                0x0000047e                SW_u8AddPBN
 .text.SW_vidTask
                0x00000510      0x1c2 ./SWITCH/SWITCH.o
                0x00000510                SW_vidTask
 .text.SW_u8Read
                0x000006d2       0x5e ./SWITCH/SWITCH.o
                0x000006d2                SW_u8Read
 .text.LCD_u8WriteCommand
                0x00000730      0x25a ./LCD/LCD.o
 .text.LCD_u8Init
                0x0000098a      0x222 ./LCD/LCD.o
 .text.LCD_u8WriteData
                0x00000bac      0x1b4 ./LCD/LCD.o
 .text.LCD_u8GotoXY
                0x00000d60       0x54 ./LCD/LCD.o
 .text.LCD_vidTask
                0x00000db4      0x116 ./LCD/LCD.o
                0x00000db4                LCD_vidTask
 .text.LCD_vidGotoXY
                0x00000eca       0x24 ./LCD/LCD.o
                0x00000eca                LCD_vidGotoXY
 .text.LCD_vidWrite
                0x00000eee       0x90 ./LCD/LCD.o
                0x00000eee                LCD_vidWrite
 .text.LCD_vidInit
                0x00000f7e       0x14 ./LCD/LCD.o
                0x00000f7e                LCD_vidInit
 .text.LCD_vidString
                0x00000f92       0x52 ./LCD/LCD.o
                0x00000f92                LCD_vidString
 .text.LCD_vidClear
                0x00000fe4       0x68 ./LCD/LCD.o
                0x00000fe4                LCD_vidClear
 .text.DIO_vidInit
                0x0000104c        0xe ./DIO/DIO.o
                0x0000104c                DIO_vidInit
 .text.DIO_u8SetPinDir
                0x0000105a      0x338 ./DIO/DIO.o
                0x0000105a                DIO_u8SetPinDir
 .text.DIO_u8WritePin
                0x00001392      0x1e0 ./DIO/DIO.o
                0x00001392                DIO_u8WritePin
 .text.DIO_u8ReadPin
                0x00001572      0x116 ./DIO/DIO.o
                0x00001572                DIO_u8ReadPin
 .text.ADC_vidInit
                0x00001688       0x2a ./ADC/ADC.o
                0x00001688                ADC_vidInit
 .text.ADC_Select
                0x000016b2       0x28 ./ADC/ADC.o
                0x000016b2                ADC_Select
 .text.ADC_vidStartConversion
                0x000016da       0x1c ./ADC/ADC.o
                0x000016da                ADC_vidStartConversion
 .text.ADC_u8ConvFinshed
                0x000016f6       0x1a ./ADC/ADC.o
                0x000016f6                ADC_u8ConvFinshed
 .text.ADC_u16GetData
                0x00001710       0x5c ./ADC/ADC.o
                0x00001710                ADC_u16GetData
 .text.ADC_u16Read
                0x0000176c       0x2a ./ADC/ADC.o
                0x0000176c                ADC_u16Read
 .text.main     0x00001796        0xe ./main.o
                0x00001796                main
 .text.libgcc   0x000017a4       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x000017a4                __udivmodsi4
 .text.libgcc   0x000017e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000017e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000017e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000017e8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000017e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000017e8                exit
                0x000017e8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000017e8        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000017ec                _etext = .

.data           0x00800060       0x3c load address 0x000017ec
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./UART/UART.o
 .data          0x00800060        0x0 ./TIMER/TIMER.o
 .data          0x00800060       0x17 ./TEST/TEST.o
 .data          0x00800077        0x0 ./SWITCH/SWITCH.o
 .data          0x00800077        0x0 ./LCD/LCD.o
 .data          0x00800077        0x0 ./DIO/DIO.o
 .data          0x00800077        0x0 ./ADC/ADC.o
 .data          0x00800077        0x0 ./main.o
 .data          0x00800077        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800077        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800077        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800077        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.PBN_state
                0x00800077        0x3 ./SWITCH/SWITCH.o
 .data.LCD_LINE
                0x0080007a       0x22 ./LCD/LCD.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080009c                . = ALIGN (0x2)
                0x0080009c                _edata = .
                0x0080009c                PROVIDE (__data_end, .)

.bss            0x0080009c       0x18
                0x0080009c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080009c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080009c        0x0 ./UART/UART.o
 .bss           0x0080009c        0x0 ./TIMER/TIMER.o
 .bss           0x0080009c        0x0 ./TEST/TEST.o
 .bss           0x0080009c        0x0 ./SWITCH/SWITCH.o
 .bss           0x0080009c        0x0 ./LCD/LCD.o
 .bss           0x0080009c        0x0 ./DIO/DIO.o
 .bss           0x0080009c        0x0 ./ADC/ADC.o
 .bss           0x0080009c        0x0 ./main.o
 .bss           0x0080009c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x0080009c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080009c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080009c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.UART_INIT
                0x0080009c        0x1 ./UART/UART.o
 .bss.time      0x0080009d        0x4 ./TIMER/TIMER.o
 .bss.PBN       0x008000a1        0x3 ./SWITCH/SWITCH.o
 .bss.u8Count   0x008000a4        0x1 ./SWITCH/SWITCH.o
 .bss.u8i.1290  0x008000a5        0x1 ./SWITCH/SWITCH.o
 .bss.counter.1289
                0x008000a6        0x3 ./SWITCH/SWITCH.o
 .bss.u8x       0x008000a9        0x1 ./LCD/LCD.o
 .bss.u8y       0x008000aa        0x1 ./LCD/LCD.o
 .bss.u8LCDState
                0x008000ab        0x1 ./LCD/LCD.o
 .bss.LCD_Command_State.1263
                0x008000ac        0x1 ./LCD/LCD.o
 .bss.u8LCDwritetime.1262
                0x008000ad        0x1 ./LCD/LCD.o
 .bss.u8LCDinittime.1341
                0x008000ae        0x1 ./LCD/LCD.o
 .bss.u8LCD_init_state.1340
                0x008000af        0x1 ./LCD/LCD.o
 .bss.LCD_Data_State.1423
                0x008000b0        0x1 ./LCD/LCD.o
 .bss.u8LCDdatatime.1422
                0x008000b1        0x1 ./LCD/LCD.o
 .bss.LCDy.1492
                0x008000b2        0x1 ./LCD/LCD.o
 .bss.LCDx.1491
                0x008000b3        0x1 ./LCD/LCD.o
 *(COMMON)
                0x008000b4                PROVIDE (__bss_end, .)
                0x000017ec                __data_load_start = LOADADDR (.data)
                0x00001828                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000b4        0x0
                0x008000b4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000b4                PROVIDE (__noinit_end, .)
                0x008000b4                _end = .
                0x008000b4                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2514
 *(.stab)
 .stab          0x00000000      0x4b0 ./UART/UART.o
 .stab          0x000004b0      0x36c ./TIMER/TIMER.o
                                0x378 (size before relaxing)
 .stab          0x0000081c      0x2dc ./TEST/TEST.o
                                0x2e8 (size before relaxing)
 .stab          0x00000af8      0x51c ./SWITCH/SWITCH.o
                                0x528 (size before relaxing)
 .stab          0x00001014      0xbe8 ./LCD/LCD.o
                                0xbf4 (size before relaxing)
 .stab          0x00001bfc      0x498 ./DIO/DIO.o
                                0x4a4 (size before relaxing)
 .stab          0x00002094      0x384 ./ADC/ADC.o
                                0x390 (size before relaxing)
 .stab          0x00002418       0xfc ./main.o
                                0x108 (size before relaxing)

.stabstr        0x00000000     0x1433
 *(.stabstr)
 .stabstr       0x00000000     0x1433 ./UART/UART.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(DRIVERS.elf elf32-avr)
LOAD linker stubs
